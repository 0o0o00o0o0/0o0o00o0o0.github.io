(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{501:function(t,s,a){"use strict";a.r(s);var r=a(4),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("我是一位转行的前端工程师。对，入行之前0基础、低学历、被忽悠进入培训机构的那种。")]),t._v(" "),a("h3",{attrs:{id:"迷茫"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迷茫"}},[t._v("#")]),t._v(" 迷茫")]),t._v(" "),a("p",[t._v("通过包装了一年工作经验的简历入的行，最低薪资进了某个大公司的外包公司。氛围很差，啥都是内网，开发就用内部的一套框架，重复的cv开发着，有种‘闭关锁国’的感觉，新事物对我来说，404。此时，vue,react的风已经刮起，nodejs已经成为前端er的需要掌握的能力。")]),t._v(" "),a("h3",{attrs:{id:"改变"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#改变"}},[t._v("#")]),t._v(" 改变")]),t._v(" "),a("p",[t._v("就这么过了一年，被大公司人事分配到另一个外包公司。我以为我还会麻木，可是通往更广阔技术的接口200了。新同事教会了我用ng2和react、es6。我学的很慢，将近一年才学会基本，很感激。去年，来到了人和未来，感觉沐浴在前端的温泉之中，技术和见识都得到了极大的提升。我并没有看权威的，厚厚的犀牛书，也没有看市面上其他前端教程，而是汲取了我们老大平时教我们的精华，这些精华都浓缩在这本书中，这也是我买这本书的重要原因。")]),t._v(" "),a("h3",{attrs:{id:"效率"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#效率"}},[t._v("#")]),t._v(" 效率")]),t._v(" "),a("p",[t._v("正如书开篇即表达了效率的重要性，作者平时也是一个很追求效率的人。能用键盘就绝不会用鼠标，能分屏的绝不tab切换，大概这样子。在掘金看到过一段沸点，效率高的人反倒会被认为前端工程师的价值低，效率低加班多的反倒被认为是认真工作，多么讽刺而且现实。可事实上，在效率高的时候，可以学习更多知识跟技能，如正在学习python的我。现在是前端的快发展阶段，效率低意味着开发慢，可以用来学习的空闲时间少，技能跟不上就会被淘汰，或许可以在一家公司混吃混喝到狗带吧。书中介绍了几种快速提高效率的工具和方法，对我来说受益匪浅，简单的cv大段代码，鼠标操作的可能需要10s,现在就是2s，节省出来的时间看似很少，星星之火可以燎原。")]),t._v(" "),a("h3",{attrs:{id:"全面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全面"}},[t._v("#")]),t._v(" 全面")]),t._v(" "),a("p",[t._v("我没了解其他编程语言，所以不敢说前端是做事情最不专一的行业，但是确实挺不专一的。PC端、手机H5端、写各种端的小程序、甚至跨平台写app，网络协议，nodejs等等。衍生出来的框架更是层出不穷，书中就详细讲解了关于各个端开发的知识点和区别，以及网络协议和nodejs内容。前端er的技能树真的是宽而且长，然而一部分前端er的眼界可能被困在某个巨兽手中，就像以前迷茫的我，麻木的起起落落，cv战士，井底之蛙。诚然，我认为前端最权威的依旧是犀牛书，写得一手极其严谨的js代码也是一个优秀的前端er，但是精于行不如境于行，全面的前端知识更适合我们。这本书做到了，从前端到全端的进阶。")]),t._v(" "),a("h3",{attrs:{id:"理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#理解"}},[t._v("#")]),t._v(" 理解")]),t._v(" "),a("p",[t._v("一千个读者有一千个哈姆雷特，学习也是这样。记得以前不理解bfc，搜索出的文章基本看不太懂，那时候太年轻，脑筋死，跟不上别人的思路。这里就需要理解其他人的学习思考方式。书中的精华除了大量知识和扩展外，还加入了作者的思考方式，对类似知识进行对比分析。此时，不仅仅加深原知识点的理解，还理解了另一个知识点，这里有点类似张鑫旭的书加入自己理解帮助读者理解，不过本书不仅仅是帮助读者理解css，还有js，网络协议,nodejs等等，这就是站在了巨人的肩膀上的感觉吧。")]),t._v(" "),a("h3",{attrs:{id:"危机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#危机"}},[t._v("#")]),t._v(" 危机")]),t._v(" "),a("p",[t._v("居安思危，这是我读这本书的另一个感悟。确实，我是一个培训4个月，靠假简历就入行了的前端，可是我不只有一个我，还有很多个我。我平时混迹于各个前端群组中，也听闻过很多培训出来包装假简历（包装成三年工作经验）拿高工资混美满小日子的前端er（薪资比我这个真正三年工作经验的都高），意味着，前端门槛真的低，低的同时初始薪资相比于其他行业又高，所以每年都有不少新的前端er杀入市场一起蚕食这块香饽饽。随着年龄增长，你能做的事情刚入行的都能做，还薪资比你低，公司肯定会要这枚新鲜年轻的血液。所以前端er，不能仅仅只会前端，而是面向全端学习。")]),t._v(" "),a("h3",{attrs:{id:"展望"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#展望"}},[t._v("#")]),t._v(" 展望")]),t._v(" "),a("p",[t._v("工欲善其事，必先利其器。若想专攻js，犀牛书绝对让你欲罢不能，想深入了解css的神奇，《css世界》当然是不二选择，但是如果你想面向全端发展不被社会淘汰，那就是你了，《了不起的javascript工程师》。")])])}),[],!1,null,null,null);s.default=e.exports}}]);